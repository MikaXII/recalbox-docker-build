#!/bin/bash
#[[ -z "$1" ]] && { echo -e "usage : ./createRecalboxOS branch\n\tWith branch = 'recalbox' or 'recalbox-rpi2'" && exit 1 ;}
#$TERM=xterm
branch='recalbox-rpi2'


origindir=`pwd`
echo -e "\n\n--- Welcome to recalbox compilation script ---\nBe sure you have a movie to watch, like Lord of the Ring trilogy or something that long while compiling...\n\n"
echo -e "--- I will use branch $branch of the recalbox-buildroot ---"

#echo -e "\n\n---- First i'm going to install required dependencies ----\n\n"
#sudo apt-get install build-essential git libncurses5-dev qt5-default qttools5-dev-tools libstring-mkpasswd-perl mercurial openjdk-7-jdk ||
#	{ echo "ERROR : Unable to install dependencies"; exit 1 ;}

echo -e "\n\n---- PHASE 1 : First i'm going to clone the recalbox system repository ----\n\n"

recalboxDir="recalbox-buildroot-${branch}"

if [ -d "$recalboxDir" ];then 
	echo -e "\n----- recalbox-buildroot exists, no git clone ----\n"
else
	git clone https://github.com/digitallumberjack/recalbox-buildroot $recalboxDir ||
		 { echo "ERROR : An error occured while cloning the repository : https://github.com/digitallumberjack/recalbox-buildroot" && exit 1 ;}
fi

cd $recalboxDir ||
         { echo "ERROR : Unable to access $recalboxDir directory" && exit 1 ;}

git checkout $branch

git pull origin $branch

echo -e "\n\n----- Cleaning recalbox-emulationstation -----\n\n"

rm -rf output/build/recalbox-emulationstation2-recalbox-buildroot*
rm -rf dl/recalbox-emulationstation2-recalbox-buildroot*

echo -e "\n\n----- Now let's build the system -----\n\n"

make ${branch}_defconfig ||
         { echo "ERROR : Unable to load recalbox vuildroot config" && exit 1 ;}
make > log 2>&1 ||
         { echo "ERROR : Unable to build recalbox system" && tail -n 100 ./log && exit 1 ;}

echo -e "\n\n---- PHASE 1 END : The system is now built ----\n\n"
echo -e "\n\n---- PHASE 2  : Let's compile the install/rescue system ----\n\n"

cd "$origindir"

if [ -d "recalbox-rescue" ];then 
        echo -e "\n----- recalbox-rescue exists, no git clone ----\n"
else
	git clone https://github.com/digitallumberjack/recalbox-rescue ||
        	 { echo "ERROR : An error occured while cloning the repository : https://github.com/digitallumberjack/recalbox-rescue" && exit 1 ;}
fi

cd recalbox-rescue || 
         { echo "ERROR : Unable to access recalbox-rescue directory" && exit 1 ;}

git checkout $branch

git pull origin $branch

echo -e "\n\n---- Now let's build the rescue system ----\n\n"

lupdate -no-obsolete recovery/recovery.pro

./BUILDME.sh  > log 2>&1 || 
         { echo "ERROR : Unable to build recalbox rescue" && tail -n 100 ./log && exit 1 ;}

echo -e "\n\n----  PHASE 2 END : The rescue system is built----\n\n"

echo -e "\n\n----  PHASE 3 : Creating the sd content ----\n--- The content of the folder SDCONTENT must be copied to a FAT32 formatted SDCARD ---\n\n"

cd "$origindir"
mkdir SDCONTENT
echo -e "\n----- Copying rescue system -----\n"
cp -r recalbox-rescue/output/* SDCONTENT || 
	{ echo "ERROR : Unable to copy files from recalbox-rescue build" && exit 1 ;}

echo -e "\n----- Copying root filesystem archive -----\n"
cp "$recalboxDir/output/images/rootfs.tar.xz" "SDCONTENT/os/recalboxOS/root.tar.xz" ||
	{ echo "ERROR : unable to copy rootfs" && exit 1 ;}

echo -e "\n----- Creating share filesystem archive -----\n"

rm -f "SDCONTENT/os/recalboxOS/share.tar" "SDCONTENT/os/recalboxOS/share.tar.xz"

tar -cvf "SDCONTENT/os/recalboxOS/share.tar" -C "$recalboxDir/board/recalbox/share/" `ls $recalboxDir/board/recalbox/share/` ||
	{ echo "ERROR : unable to create share.tar" && exit 1 ;}

xz "SDCONTENT/os/recalboxOS/share.tar" || 
	{ echo "ERROR : unable to compress share.tar" && exit 1 ;}

echo -e "\n----- Creating boot filesystem archive -----\n"

rm -f "SDCONTENT/os/recalboxOS/boot.tar" "SDCONTENT/os/recalboxOS/boot.tar.xz"

tar -cvf "SDCONTENT/os/recalboxOS/boot.tar" -C "$recalboxDir/output/images/rpi-firmware/" "../zImage" `ls $recalboxDir/output/images/rpi-firmware/` ||
        { echo "ERROR : unable to create boot.tar" && exit 1 ;}

xz "SDCONTENT/os/recalboxOS/boot.tar" || 
        { echo "ERROR : unable to compress boot.tar" && exit 1 ;}

echo -e "\n\n--- YOUR SYSTEM IS NOW READY ! COPY ALL FILES IN 'SDCONTENT' FOLDER ON YOUR FAT32 SDCARD ! ---\n\n"
